name: Encrypt Kernel Setup Script

on:
  workflow_dispatch:

jobs:
  encrypt-script:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shc build-essential
        
    - name: Create script file
      run: |
        # 使用不同的结束标记避免冲突
        cat << 'SCRIPT_EOF' > suksu_setup.sh
        #!/bin/bash
        cd kernel_workspace/kernel_platform
        curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/setup.sh" | bash -s susfs-main
        cd ./KernelSU
        
        for i in {1..3}; do
          KSU_API_VERSION=$(curl -fsSL "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/Makefile" |
            grep -m1 "KSU_VERSION_API *:=" |
            awk -F':= *' '{print $2}' |
            tr -d '[:space:]')
          [ -n "$KSU_API_VERSION" ] && break || sleep 2
        done

        if [ -z "$KSU_API_VERSION" ]; then
          echo "⚠️ 获取 KSU_VERSION_API 失败，使用默认值 3.1.7"
          KSU_API_VERSION="3.1.7"
        fi
        echo "KSU_API_VERSION=$KSU_API_VERSION"

        echo "KSU_API_VERSION=$KSU_API_VERSION" >> $GITHUB_ENV

        
        ENCODED_SUFFIX="VEdAcWR5a2VybmVs"
        DECODED_SUFFIX=$(echo "$ENCODED_SUFFIX" | base64 -d)
        cat > /tmp/version_defs << 'VERSION_EOF'
        define get_ksu_version_full
        v\$1-$DECODED_SUFFIX
        endef
        KSU_VERSION_API := $KSU_API_VERSION
        KSU_VERSION_FULL := v$KSU_API_VERSION-$DECODED_SUFFIX
        VERSION_EOF
        
        sed -i '/define get_ksu_version_full/,/endef/d' kernel/Makefile
        sed -i '/KSU_VERSION_API :=/d' kernel/Makefile
        sed -i '/KSU_VERSION_FULL :=/d' kernel/Makefile
        
        awk -v def="$(cat /tmp/version_defs)" '
          /REPO_OWNER :=/ {print; print def; inserted=1; next}
          1
          END {if (!inserted) print def}
        ' kernel/Makefile > kernel/Makefile.tmp && mv kernel/Makefile.tmp kernel/Makefile
        
        KSU_VERSION=$(expr $(git rev-list --count main) + 10700 2>/dev/null || echo 13000)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
        
        grep -A10 "REPO_OWNER" kernel/Makefile
        grep "KSU_VERSION_FULL" kernel/Makefile
        SCRIPT_EOF
        
        chmod +x suksu_setup.sh
        echo "✅ 脚本创建成功"
        head -n 20 suksu_setup.sh
        
    - name: Verify script
      run: |
        echo "验证脚本内容..."
        if [ ! -f "suksu_setup.sh" ]; then
          echo "❌ 脚本文件未创建"
          exit 1
        fi
        
        echo "脚本首行: $(head -n1 suksu_setup.sh)"
        echo "脚本行数: $(wc -l suksu_setup.sh)"
        
    - name: Encrypt script
      run: |
        echo "🔒 开始加密..."
        
        # 检查 shc 可用选项
        echo "shc 帮助信息:"
        shc -h || true
        
        # 使用兼容性更好的选项
        shc -f suksu_setup.sh -o setup.bin -v
        
        echo "加密结果:"
        file setup.bin
        ls -lh setup.bin*
        echo "SHA256: $(sha256sum setup.bin)"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: encrypted-setup
        path: setup.bin
